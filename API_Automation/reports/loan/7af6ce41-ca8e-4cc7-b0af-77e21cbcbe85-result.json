{"name": "TC_018 - Verify that disbursementChannel(without) Filed Non Mandatory, system should allow creating (POST) a loan record.", "status": "failed", "statusDetails": {"message": "AssertionError: POST request can be OpeningBalanceTrue means outsidePayrollPayment(with) Field Mandatory, status 200\nassert 200 == 400\n +  where 200 = <APIResponse url='https://compbenefits8.dev.zoolwork.com/api/CompBenefits/companies/3a1a417d-51c2-bab1-6b7f-5b97cd6a53f8/loans' status=200 status_text='OK'>.status", "trace": "self = <API_Automation.tests.LoanTest.test_Loan.TestLoanManagement object at 0x00000210CFB1B960>\nplaywright = <playwright._impl._playwright.Playwright object at 0x00000210D1219010>, companyId = '3a1a417d-51c2-bab1-6b7f-5b97cd6a53f8'\n\n    @allure.title(\n        \"TC_018 - Verify that disbursementChannel(without) Filed Non Mandatory, system should allow creating (POST) a loan record.\")\n    @pytest.mark.parametrize(\"companyId\", [\"3a1a417d-51c2-bab1-6b7f-5b97cd6a53f8\"])\n    def test_POST_WithOutdisbursementChannel(self, playwright, companyId):\n        loan_client = LoanAPI(playwright, BASE_URL, TOKEN)\n        payload_path = os.path.join(\n            os.path.dirname(__file__),\n            \"..\", \"..\", \"data\", \"loan\", \"disbursementChannelWithout.json\"\n        )\n        with open(payload_path, \"r\") as f:\n            payload = json.load(f)\n        # Make POST request\n        response = loan_client.post_loans(companyId, payload)\n    \n>       assert response.status == 400, f\"POST request can be OpeningBalanceTrue means outsidePayrollPayment(with) Field Mandatory, status {response.status}\"\nE       AssertionError: POST request can be OpeningBalanceTrue means outsidePayrollPayment(with) Field Mandatory, status 200\nE       assert 200 == 400\nE        +  where 200 = <APIResponse url='https://compbenefits8.dev.zoolwork.com/api/CompBenefits/companies/3a1a417d-51c2-bab1-6b7f-5b97cd6a53f8/loans' status=200 status_text='OK'>.status\n\nAPI_Automation\\tests\\LoanTest\\test_Loan.py:562: AssertionError"}, "parameters": [{"name": "companyId", "value": "'3a1a417d-51c2-bab1-6b7f-5b97cd6a53f8'"}], "start": 1759491617336, "stop": 1759491618085, "uuid": "f3e6ac42-0bbe-4d03-be93-e43621b5e1bc", "historyId": "a1fdff0ca9c27329151f16e415180cd9", "testCaseId": "a8be8b3c72a04dae071c0eea9a3fffe5", "fullName": "API_Automation.tests.LoanTest.test_Loan.TestLoanManagement#test_POST_WithOutdisbursementChannel", "labels": [{"name": "story", "value": "Record Loan"}, {"name": "feature", "value": "Loan Management"}, {"name": "parentSuite", "value": "API_Automation.tests.LoanTest"}, {"name": "suite", "value": "test_Loan"}, {"name": "subSuite", "value": "TestLoanManagement"}, {"name": "host", "value": "Comm-IT"}, {"name": "thread", "value": "32284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "API_Automation.tests.LoanTest.test_Loan"}]}